{"ast":null,"code":"import _classCallCheck from\"D:/Meeting/labweb/LabWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Meeting/labweb/LabWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/Meeting/labweb/LabWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/Meeting/labweb/LabWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _defineProperty from\"D:/Meeting/labweb/LabWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/Meeting/labweb/LabWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Component}from'react';import CategoryButton from'./Skills/CategoryButton';import SkillBar from'./Skills/SkillBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var handleProps=function handleProps(_ref){var categories=_ref.categories,skills=_ref.skills;return{buttons:categories.map(function(cat){return cat.name;}).reduce(function(obj,key){return _objectSpread(_objectSpread({},obj),{},_defineProperty({},key,false));},{All:true}),skills:skills};};var Skills=/*#__PURE__*/function(_Component){_inherits(Skills,_Component);var _super=_createSuper(Skills);function Skills(props){var _this;_classCallCheck(this,Skills);_this=_super.call(this,props);_this.handleChildClick=function(label){_this.setState(function(prevState){// Toggle button that was clicked. Turn all other buttons off.\nvar buttons=Object.keys(prevState.buttons).reduce(function(obj,key){return _objectSpread(_objectSpread({},obj),{},_defineProperty({},key,label===key&&!prevState.buttons[key]));},{});// Turn on 'All' button if other buttons are off\nbuttons.All=!Object.keys(prevState.buttons).some(function(key){return buttons[key];});return{buttons:buttons};});};_this.state=handleProps({categories:props.categories,skills:props.skills});return _this;}_createClass(Skills,[{key:\"getRows\",value:function getRows(){var _this2=this;// search for true active categories\nvar actCat=Object.keys(this.state.buttons).reduce(function(cat,key){return _this2.state.buttons[key]?key:cat;},'All');return this.state.skills.sort(function(a,b){var ret=0;if(a.competency>b.competency)ret=-1;else if(a.competency<b.competency)ret=1;else if(a.category[0]>b.category[0])ret=-1;else if(a.category[0]<b.category[0])ret=1;else if(a.title>b.title)ret=1;else if(a.title<b.title)ret=-1;return ret;}).filter(function(skill){return actCat==='All'||skill.category.includes(actCat);}).map(function(skill){return/*#__PURE__*/_jsx(SkillBar,{categories:_this2.props.categories,data:skill},skill.title);});}},{key:\"getButtons\",value:function getButtons(){var _this3=this;return Object.keys(this.state.buttons).map(function(key){return/*#__PURE__*/_jsx(CategoryButton,{label:key,active:_this3.state.buttons,handleClick:_this3.handleChildClick},key);});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"skills\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"link-to\",id:\"skills\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Skills\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Note: I think these sections are silly, but everyone seems to have one. Here is a *mostly* honest overview of my skills.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"skill-button-container\",children:this.getButtons()}),/*#__PURE__*/_jsx(\"div\",{className:\"skill-row-container\",children:this.getRows()})]});}}]);return Skills;}(Component);Skills.defaultProps={skills:[],categories:[]};export default Skills;","map":{"version":3,"sources":["D:/Meeting/labweb/LabWeb/src/components/Resume/Skills.js"],"names":["React","Component","CategoryButton","SkillBar","handleProps","categories","skills","buttons","map","cat","name","reduce","obj","key","All","Skills","props","handleChildClick","label","setState","prevState","Object","keys","some","state","actCat","sort","a","b","ret","competency","category","title","filter","skill","includes","getButtons","getRows","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={this.props.categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h3>Skills</h3>\n          <p>Note: I think these sections are silly, but everyone seems to have one.\n            Here is a *mostly* honest overview of my skills.\n          </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}